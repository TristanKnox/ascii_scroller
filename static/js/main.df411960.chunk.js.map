{"version":3,"sources":["logo.svg","js/ScrollStates/ScrollState.js","js/Components/AsciiCanvas.js","js/Components/OptionBar.js","js/Components/AsciiSubmittionForm.js","js/Components/ScrollPage.js","ascii/turtle_tester","App.js","reportWebVitals.js","index.js"],"names":["ScrollState","LEFT","RIGHT","UP","DOWN","RANDO","CRAYS_TOWN","RESET","AsciiCanvas","props","state","baseLineStates","displayLineStates","longestLineLen","parsAsciiString","bind","addLine","propChangeTest","initLineTracking","prevProps","prevState","snapshot","this","ascii","initAscii","setInterval","run","parsedAsciiData","lCount","length","horizontalBorder","i","setState","console","log","lineCount","tempfront","getFrontOriginPosition","tempback","getBackOriginPosition","top","getTopOriginPosition","bottom","getBottomOriginPosition","emptyString","buildEmptyString","front","back","blankLine","startTimer","updateDisplayLines","shift","baseLines","map","line","newLines","index","topBottomLine","baseLine","getLine","newLine","getText","shiftDerection","shiftLeft","shiftRight","shiftUP","shiftDown","randomShift","resetImage","shiftIndex","Math","floor","random","str","lineItems","class","className","style","color","fontSize","lines","currentLongestLen","asciiString","currentChar","currentLine","normalizeLines","normalizeLine","spacessNeeded","spaces","push","currentString","newString","getCharAt","string","hasScrolledOffScreenLeft","setScrollInLeft","tempFront","tempBack","hasScrolledOffScreenRight","setScrollInRight","lineLen","newFront","newBack","hasScrolledOffScreenUp","hasScrolledOffScreenDown","resetScrollState","React","OptionBar","updateScroll","onClick","newState","updateScrollState","AsciiSubmittionForm","submitAssciArt","copyUrlToClipboard","id","input","document","getElementById","value","submit","creatURL","ScrollPage","placeholderString","decodeForwardSlashes","scrollState","setScrollState","setAsciiArt","resetSubmissionState","createUIL","submissionRecieved","newSubmission","asciiArt","url","encoding","encodeURI","decoded","foundEncoding","WithParams","useParams","NoParams","App","basename","process","path","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.df411960.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import AsciiCanvas from \"../Components/AsciiCanvas\";\r\n\r\n\r\nconst ScrollState = {\r\n    LEFT: 0,\r\n    RIGHT: 1,\r\n    UP: 2,\r\n    DOWN: 3,\r\n    RANDO: 4,\r\n    CRAYS_TOWN: 5,\r\n    RESET: 6\r\n}\r\n\r\nexport default ScrollState","import * as React from \"react\";\r\nimport ScrollState from \"../ScrollStates/ScrollState\"\r\nimport App from \"../../App\";\r\nimport Line from \"../LineStructurs/Line\"\r\n\r\nimport '../../css/PageStyles.css'\r\nclass AsciiCanvas extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            baseLineStates: [],\r\n            displayLineStates: [],\r\n            longestLineLen: 0,\r\n            // lineCount: 0\r\n        }\r\n\r\n\r\n        this.parsAsciiString = this.parsAsciiString.bind(this)\r\n        this.addLine = this.addLine.bind(this)\r\n        this.propChangeTest = this.propChangeTest.bind(this)\r\n\r\n        // this.getFrontOriginPosition = this.getFrontOriginPosition.bind(this)\r\n        this.initLineTracking = this.initLineTracking.bind(this)\r\n        // this.run = this.run.bind(this)\r\n        // this.startTimer = this.startTimer.bind(this)\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.ascii !== prevProps.ascii)\r\n            this.initAscii()\r\n    }\r\n\r\n    startTimer(){\r\n        setInterval(()=>this.run(), 50)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initAscii()\r\n    }\r\n\r\n    initAscii(){\r\n        let parsedAsciiData = this.parsAsciiString()\r\n        let lCount = parsedAsciiData['lines'].length\r\n        let horizontalBorder = \"\"\r\n        for(let i = 0; i < parsedAsciiData['longestLineLen']; i++){\r\n            horizontalBorder += \"=\"\r\n        }\r\n        this.setState({baseLineStates: parsedAsciiData['lines']}, () => console.log(this.state.baseLineStates))\r\n        this.setState({displayLineStates: parsedAsciiData['lines']},() => console.log(this.state.displayLineStates))\r\n        this.setState({horizontalBorder: horizontalBorder})\r\n        this.setState({lineCount: lCount, longestLineLen: parsedAsciiData['longestLineLen']  }, () => this.initLineTracking())\r\n    }\r\ndf\r\n    initLineTracking(){\r\n        let tempfront = this.getFrontOriginPosition()\r\n        let tempback = this.getBackOriginPosition()\r\n        let top = this.getTopOriginPosition()\r\n        let bottom = this.getBottomOriginPosition()\r\n        let emptyString = this.buildEmptyString()\r\n        this.setState({front: tempfront, back: tempback, top: top, bottom: bottom, blankLine: emptyString}, () => this.startTimer() )\r\n    }\r\n\r\n    run(){\r\n        this.updateDisplayLines()\r\n        this.shift()\r\n    }\r\n\r\n    updateDisplayLines(){\r\n        let baseLines = this.state.baseLineStates.map((line) => line)\r\n        let newLines = []\r\n        let index = 0\r\n        let topBottomLine = \"*\" +this.state.horizontalBorder + \"*\"\r\n        newLines[index++] = topBottomLine\r\n        for(let i = this.state.top; i < this.state.bottom; i++){\r\n            let baseLine = this.getLine(baseLines, i)\r\n            let newLine = \"|\" + this.getText(baseLine) + \"|\"\r\n            newLines[index++] = newLine\r\n        }\r\n        newLines[index] = topBottomLine\r\n        this.setState({ displayLineStates: newLines})\r\n    }\r\n\r\n\r\n\r\n    shift(){\r\n        let shiftDirection = this.props.shiftDerection\r\n        switch (shiftDirection){\r\n            case ScrollState.LEFT:\r\n                this.shiftLeft()\r\n                break\r\n            case ScrollState.RIGHT:\r\n                this.shiftRight()\r\n                break\r\n            case ScrollState.UP:\r\n                this.shiftUP()\r\n                break\r\n            case ScrollState.DOWN:\r\n                this.shiftDown()\r\n                break\r\n            case ScrollState.CRAYS_TOWN:\r\n                this.randomShift()\r\n                break\r\n            case ScrollState.RESET:\r\n                this.resetImage()\r\n                break\r\n        }\r\n    }\r\n\r\n    randomShift(){\r\n        let shiftIndex = Math.floor(Math.random() * 4)\r\n        if(shiftIndex === ScrollState.LEFT){\r\n            this.shiftLeft()\r\n        }\r\n        if(shiftIndex === ScrollState.RIGHT){\r\n            this.shiftRight()\r\n        }\r\n        if(shiftIndex === ScrollState.UP){\r\n            this.shiftUP()\r\n        }\r\n        if(shiftIndex === ScrollState.DOWN){\r\n            this.shiftDown()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    buildEmptyString(){\r\n        let str = \"\"\r\n        for(let i = 0; i < this.state.longestLineLen; i++)\r\n            str += \" \"\r\n        return str\r\n    }\r\n\r\n    propChangeTest(){\r\n        // console.log(this.props.test)\r\n        // return this.props.test\r\n    }\r\n\r\n    render(){\r\n        let lineItems = this.state.displayLineStates.map((line) => <li>{line}</li>)\r\n        // let linex = this.state.baseLineStates.map((line) => line)\r\n        // console.log(linex)\r\n        return(\r\n            <div>\r\n                <ul class=\"no-bullets\"><div className=\"lineContainer\">\r\n                    <pre style={{color: 'green', fontSize: '1.5vw'}} >{lineItems}</pre>\r\n                </div></ul>\r\n                <h2>Create or Past New Ascii Here</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    parsAsciiString(){\r\n        let lines = [];\r\n        let longestLineLen = 0\r\n        let currentLongestLen = 0\r\n        let asciiString = this.props.ascii\r\n        let currentChar = \"\"\r\n        let currentLine = \"\"\r\n        for(let i = 0; i < asciiString.length; i++){\r\n            currentChar = asciiString[i]\r\n            if(currentChar === \"\\n\"){\r\n                longestLineLen = this.addLine(currentLine, lines, currentLongestLen, longestLineLen)\r\n                currentLine = \"\"\r\n                currentLongestLen = 0\r\n            }\r\n            else{\r\n                currentLine += currentChar\r\n                currentLongestLen++\r\n            }\r\n        }\r\n        longestLineLen = this.addLine(currentLine, lines, currentLongestLen, longestLineLen)\r\n        this.normalizeLines(lines, longestLineLen)\r\n        return {'lines':lines, 'longestLineLen': longestLineLen}\r\n    }\r\n\r\n    normalizeLines(lines, longestLineLen){\r\n        for(let index in lines){\r\n            lines[index] = this.normalizeLine(lines[index], longestLineLen)\r\n        }\r\n    }\r\n\r\n    normalizeLine(line, longestLineLen){\r\n        let spacessNeeded = longestLineLen - line.length\r\n        let spaces = \"\"\r\n        for(let i = 0; i < spacessNeeded; i++)\r\n            spaces += \" \"\r\n        return line + spaces\r\n    }\r\n\r\n    addLine(line, lines, currentLongestLen, longestLineLen){\r\n        lines.push(line)\r\n        if(currentLongestLen > longestLineLen)\r\n            return currentLongestLen\r\n        return longestLineLen\r\n    }\r\n\r\n    // calcLineCount(){\r\n    //     let lineCount = 1\r\n    //     for(let i = 0; i < this.props.ascii.length; i++){\r\n    //         if(this.props.ascii[i] === '\\n')\r\n    //             lineCount ++;\r\n    //     }\r\n    //     return lineCount\r\n    // }\r\n\r\n    /////////////////////\r\n    // Shift Controlls //\r\n    /////////////////////\r\n\r\n    getText(currentString){\r\n        // console.log(currentString)\r\n        let newString = \"\"\r\n        let tempfront = this.state.front\r\n        let tempback = this.state.back\r\n        for(let i = tempfront; i <= tempback; i++){\r\n            let char = this.getCharAt(currentString, i)\r\n            newString += this.getCharAt(currentString, i)\r\n        }\r\n        return newString\r\n    }\r\n\r\n    getCharAt(string, index) {\r\n        if (index < this.getFrontOriginPosition() || index >= this.getBackOriginPosition()) {\r\n            return \" \"\r\n        }\r\n        return string[index]\r\n\r\n    }\r\n    getLine(lines, index){\r\n        if(index < 0 || index >= this.getBottomOriginPosition()){\r\n            return this.state.blankLine\r\n        }\r\n        return lines[index]\r\n    }\r\n\r\n    getFrontOriginPosition(){ return 0 }\r\n    getBackOriginPosition(){ return this.state.longestLineLen }\r\n    getTopOriginPosition(){ return 0 }\r\n    getBottomOriginPosition(){ return this.state.lineCount }\r\n\r\n    isAtOrigin(){\r\n        return this.state.front === this.getFrontOriginPosition() && this.state.back === this.getBackOriginPosition()\r\n    }\r\n\r\n    hasScrolledOffScreenLeft(){\r\n        // true when front has moved passed backOriginPoint\r\n        return this.state.front > this.getBackOriginPosition()\r\n    }\r\n\r\n    hasScrolledOffScreenRight(){\r\n        // true when back has moved passed frontOriginPoint\r\n        return this.state.back < this.getFrontOriginPosition()\r\n    }\r\n\r\n    hasScrolledOffScreenUp(){\r\n        return this.state.top > this.getBottomOriginPosition()\r\n    }\r\n\r\n    hasScrolledOffScreenDown(){\r\n        return this.state.bottom < this.getTopOriginPosition()\r\n    }\r\n\r\n    shiftLeft(){\r\n        if(!this.hasScrolledOffScreenLeft()){\r\n            // Text Scrolls Left so front/back move right\r\n            let tempFront = this.state.front + 1\r\n            let tempBack = this.state.back +1\r\n            this.setState({front: tempFront, back: tempBack})\r\n        }\r\n        else{\r\n            this.setScrollInLeft()\r\n        }\r\n    }\r\n\r\n    setScrollInLeft(){\r\n        let lineLen = this.state.longestLineLen\r\n        let tempFront = -1 - lineLen\r\n        let tempBack = -1\r\n        this.setState({front: tempFront, back: tempBack})\r\n    }\r\n\r\n    shiftRight(){\r\n        if(!this.hasScrolledOffScreenRight()){\r\n            // Text Scrolls Right so front/back move left\r\n            let tempfront = this.state.front - 1\r\n            let tempback = this.state.back - 1\r\n            this.setState({front: tempfront, back: tempback})\r\n        }\r\n        else{\r\n            this.setScrollInRight()\r\n        }\r\n    }\r\n    setScrollInRight(){\r\n        let lineLen = this.state.longestLineLen\r\n        let newFront = this.getBackOriginPosition() + 1\r\n        let newBack = newFront + lineLen\r\n        this.setState({front: newFront, back: newBack})\r\n    }\r\n\r\n    shiftUP(){\r\n        let top\r\n        let bottom\r\n        if(this.hasScrolledOffScreenUp()){\r\n            let lineCount = this.state.lineCount\r\n            bottom  = this.getTopOriginPosition() - 1\r\n            top = bottom - lineCount\r\n        }else{\r\n            top = this.state.top + 1\r\n            bottom = this.state.bottom + 1\r\n        }\r\n        this.setState({top:top, bottom:bottom})\r\n    }\r\n\r\n    shiftDown(){\r\n        let top\r\n        let bottom\r\n        if(this.hasScrolledOffScreenDown()){\r\n            let lineCount = this.state.lineCount\r\n            top = this.getBottomOriginPosition() + 1\r\n            bottom = top + lineCount\r\n        }else{\r\n            top = this.state.top - 1\r\n            bottom =  this.state.bottom - 1\r\n        }\r\n        this.setState({top:top, bottom:bottom})\r\n    }\r\n\r\n    resetImage(){\r\n        let top = this.getTopOriginPosition()\r\n        let bottom = this.getBottomOriginPosition()\r\n        let front = this.getFrontOriginPosition()\r\n        let back = this.getBackOriginPosition()\r\n        this.setState({top: top, bottom: bottom, front: front, back: back}, () => {this.props.resetScrollState(this.randomShift())})\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default AsciiCanvas;","import * as React from \"react\";\r\nimport '../../css/PageStyles.css'\r\nimport ScrollState from \"../ScrollStates/ScrollState\";\r\n\r\n\r\nclass OptionBar extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateScroll = this.updateScroll.bind(this)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='optionBar'>\r\n                <button className='optionBarButton' onClick={ () => this.updateScroll(ScrollState.LEFT)}>ShiftLeft</button>\r\n                <button className='optionBarButton' onClick={ () => this.updateScroll(ScrollState.RIGHT)}>ShiftRight</button>\r\n                <button className='optionBarButton' onClick={ () => this.updateScroll(ScrollState.UP)}>ShiftUP</button>\r\n                <button className='optionBarButton' onClick={ () => this.updateScroll(ScrollState.DOWN)}>ShiftDown</button>\r\n                <button className='optionBarButton' onClick={ () => this.updateScroll(ScrollState.CRAYS_TOWN)}>GimmiTheGitters</button>\r\n\r\n                <button className='optionBarButton' onClick={ () => this.updateScroll(ScrollState.RESET)}>RESET</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    updateScroll(newState){\r\n        console.log(newState)\r\n        this.props.updateScrollState(newState)\r\n    }\r\n}\r\nexport default OptionBar;","import * as React from \"react\";\r\nimport '../../css/PageStyles.css'\r\nimport ScrollState from \"../ScrollStates/ScrollState\";\r\n\r\n\r\nclass AsciiSubmittionForm extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.submitAssciArt = this.submitAssciArt.bind(this)\r\n        this.copyUrlToClipboard = this.copyUrlToClipboard.bind(this)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <textarea id={'input'}/><br/>\r\n                <button onClick={this.submitAssciArt}>submit</button>\r\n                <button onClick={this.copyUrlToClipboard}>Copy Link</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    submitAssciArt(){\r\n        console.log(\"adsjfsk\")\r\n        let input = document.getElementById('input').value\r\n        console.log(input)\r\n        this.props.submit(input)\r\n    }\r\n\r\n    copyUrlToClipboard(){\r\n        let input = document.getElementById('input').value\r\n        this.props.creatURL(input)\r\n    }\r\n\r\n\r\n}\r\nexport default AsciiSubmittionForm;","import * as React from \"react\";\r\nimport AsciiCanvas from \"./AsciiCanvas\";\r\nimport OptionBar from \"./OptionBar\";\r\nimport AsciiSubmittionForm from \"./AsciiSubmittionForm\";\r\n\r\nimport '../../css/PageStyles.css'\r\n\r\nimport ScrollState from \"../ScrollStates/ScrollState\"\r\n\r\nclass ScrollPage extends React.Component{\r\n\r\n\r\n    constructor(props) {\r\n        let placeholderString = \"  \\n\" +\r\n            \"     __    __\\n\" +\r\n            \"    (O )  (O )\\n\" +\r\n            \"     \\\\ \\\\   \\\\ \\\\\\n\" +\r\n            \"      ) )   ) )\\n\" +\r\n            \"     _( (___( (__\\n\" +\r\n            \"    /            \\\\\\n\" +\r\n            \"   /<<          >>\\\\\\n\" +\r\n            \"  /<<            >>\\\\\\n\" +\r\n            \" (      < >         )\\n\" +\r\n            \"  \\\\                /\\n\" +\r\n            \"   \\\\  vvvvvvvv    /\\n\" +\r\n            \"    \\\\____   _____/ \\n\" +\r\n            \"        _|  |_ \\n\" +\r\n            \"       /      \\\\\\n\" +\r\n            \"      / /|  |\\\\ \\\\\\n\" +\r\n            \"     | | |  | | |\\n\" +\r\n            \"     \\\\ / |  | \\\\ /\\n\" +\r\n            \"      W  /   \\\\ W\\n\" +\r\n            \"        / /\\\\  \\\\\\n\" +\r\n            \"     __/ /  \\\\  \\\\__\\n\" +\r\n            \"    (___|    |____)  \"\r\n\r\n\r\n        super(props);\r\n        // console.log(\"Props\" + this.props.ascii)\r\n        if(this.props.ascii.length > 0)\r\n            placeholderString = this.decodeForwardSlashes(this.props.ascii)\r\n        this.state = {\r\n            asciiString: placeholderString,\r\n            scrollState: ScrollState.LEFT\r\n        }\r\n\r\n        this.setScrollState = this.setScrollState.bind(this)\r\n        this.setAsciiArt = this.setAsciiArt.bind(this)\r\n        this.resetSubmissionState = this.resetSubmissionState.bind(this)\r\n        this.createUIL = this.createUIL.bind(this)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"mainPage\">\r\n                <OptionBar updateScrollState={this.setScrollState}/>\r\n                <AsciiCanvas ascii={this.state.asciiString}\r\n                             shiftDerection={this.state.scrollState}\r\n                             submissionRecieved={this.resetSubmissionState}\r\n                             resetScrollState={this.setScrollState}\r\n                             creatURL={this.createUIL}/>\r\n                <AsciiSubmittionForm submit={this.setAsciiArt}\r\n                                     creatURL={this.createUIL}/>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    setScrollState(newState){\r\n        console.log(\"new Scroll State\")\r\n        this.setState({scrollState: newState})\r\n    }\r\n\r\n    setAsciiArt(ascii){\r\n        console.log(\"New Art\")\r\n        console.log(ascii)\r\n        this.setState({asciiString:ascii, newSubmission: true})\r\n    }\r\n\r\n    resetSubmissionState(){\r\n        this.setState({newSubmission: false})\r\n    }\r\n\r\n    createUIL(asciiArt){\r\n        const url = \"https://tristanknox.github.io/ascii_scroller/\" + asciiArt\r\n        // url = \"localhost:3000/\" + asciiArt\r\n        console.log(asciiArt)\r\n        console.log(url)\r\n        const encoding = encodeURI(url)\r\n        console.log(encoding)\r\n    }\r\n\r\n    decodeForwardSlashes(ascii){\r\n        let decoded = \"\"\r\n        for(let i = 0; i < ascii.length; i++){\r\n            if(this.foundEncoding(ascii, i)){\r\n                decoded +=\"/\"\r\n                i += 2\r\n            }\r\n            else{\r\n                decoded += ascii[i]\r\n            }\r\n        }\r\n        return decoded\r\n    }\r\n\r\n    foundEncoding(ascii, index){\r\n        return (ascii[index] === '%' && ascii[index+1] === '2' && ascii[index+2] === 'F')\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nexport default ScrollPage;","export default __webpack_public_path__ + \"static/media/turtle_tester.f2268a38.bin\";","import logo from './logo.svg';\nimport AsciiCanvas from \"./js/Components/AsciiCanvas\";\nimport ScrollPage from \"./js/Components/ScrollPage\";\nimport './App.css';\nimport './ascii/turtle_tester';\nimport {HashRouter as Router, useParams, Route, Switch, HashRouter} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n      <HashRouter basename={process.env.PUBLIC_URL}>\n          <Router>\n              <div className=\"App\">\n                  <Switch>\n                      <Route path=\"https://tristanknox.github.io/ascii_scroller/:ascii\" children={<WithParams />}/>\n                      <Route path=\"/ascii_scroller/:ascii\" children={<WithParams />}/>\n                      <Route path='/'  children={<NoParams />}/>\n                  </Switch>\n              </div>\n\n          </Router>\n      </HashRouter>\n\n\n  );\n}\n\nfunction WithParams(){\n    let { ascii } = useParams()\n    if(ascii.length === 0)\n        ascii = \"\"\n    console.log(ascii)\n    return (\n        <div>\n            <ScrollPage ascii={ascii}/>\n        </div>\n    )\n}\n\nfunction NoParams(){\n    return (\n        <div>\n            <ScrollPage ascii={\"\"}/>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}